<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		 xmlns="http://java.sun.com/xml/ns/javaee"
         xsi:schemaLocation="http://java.sun.com/xml/ns/javaee  http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd"
		 version="3.0">

	<display-name>SBB Conference-Buddy</display-name>

	<context-param>
		<param-name>spring.profiles.default</param-name>
		<!-- default profile for local development and education. standalone is 
			running on a H2 in memory database. while on test, integration and/or production, 
			may I kindly asked you to set the active profile via JvmParameters like '-Dspring.profiles.active=websphere,datasource' -->
		<param-value>websphere,localDB</param-value>
	</context-param>

	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>classpath:web-context.xml</param-value>
	</context-param>

	<!-- the name of the parent application context (see beanRefContext.xml) -->
	<context-param>
		<param-name>parentContextKey</param-name>
		<param-value>root.ac</param-value>
	</context-param>

    <!-- Welcome page -->
    <welcome-file-list>
        <welcome-file>index.html</welcome-file>
    </welcome-file-list>

	<session-config>
		<session-timeout>30</session-timeout>
	</session-config>

    <!-- REST (Jersey) -->
    <servlet>
        <servlet-name>Jersey REST Service</servlet-name>
        <servlet-class>org.glassfish.jersey.servlet.ServletContainer</servlet-class>
        <init-param>
            <param-name>javax.ws.rs.Application</param-name>
            <param-value>ch.sbb.conferencebuddy.RestApplication</param-value>
        </init-param>
        <init-param>
            <param-name>jersey.config.server.provider.packages</param-name>
            <param-value>ch.sbb.conferencebuddy;
                ch.sbb.conferencebuddy.exception;
                ch.sbb.conferencebuddy.handler
            </param-value>
        </init-param>
        <!-- Request/response logging -->
        <init-param>
            <param-name>com.sun.jersey.spi.container.ContainerRequestFilters</param-name>
            <param-value>com.sun.jersey.api.container.filter.LoggingFilter</param-value>
        </init-param>
        <init-param>
            <param-name>com.sun.jersey.spi.container.ContainerResponseFilters</param-name>
            <param-value>com.sun.jersey.api.container.filter.LoggingFilter</param-value>
        </init-param>
        <load-on-startup>1</load-on-startup>
    </servlet>
    <servlet-mapping>
        <!-- http://stackoverflow.com/questions/19277888/how-to-configure-welcome-file-html-jsp-in-jersey-container -->
        <servlet-name>Jersey REST Service</servlet-name>
        <url-pattern>/service/*</url-pattern>
    </servlet-mapping>


    <!-- Security Config -->

	<!-- Form based Login Config -->
	<login-config>
		<auth-method>BASIC</auth-method>
		<realm-name>ROLE_USER</realm-name>
	</login-config>

	<!-- Roles -->
	<security-role>
		<description>Authentifizierter Benutzer</description>
		<role-name>ROLE_USER</role-name>
	</security-role>

	<!-- Security Constraint (unsecured) for all resources  -->
	<security-constraint>
		<display-name>unsecured</display-name>
		<web-resource-collection>
			<web-resource-name>unsecured</web-resource-name>
			<description/>
            <url-pattern>/*</url-pattern>
			<url-pattern>/javax.faces.resource/*</url-pattern>
			<url-pattern>/pages/javax.faces.resource/*</url-pattern>
		</web-resource-collection>
	</security-constraint>
</web-app>